name: Import database from another environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The branch to import database from (e.g: main)'
        required: true
      confirm:
        description: 'ðŸš¨ This is a destructive action. Type "CONFIRM" to proceed.'
        required: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  database-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Confirmation validation
        run: exit 1
        if: github.event.inputs.confirm != 'CONFIRM'

      -
        name: Create friendly branch name (source)
        run: |
          SOURCE_BRANCH_NAME=`echo ${{ github.event.inputs.environment }}`
          SOURCE_BRANCH_NAME=`echo ${SOURCE_BRANCH_NAME##*/} | tr "[:upper:]" "[:lower:]" | sed "s/[^[:alnum:]]//g"`
          echo $SOURCE_BRANCH_NAME
          echo "SOURCE_BRANCH_NAME_CLEAN=$(echo $SOURCE_BRANCH_NAME)" >> $GITHUB_ENV

      -
        name: Create friendly branch name (destination)
        run: |
          BRANCH_NAME=`echo ${BRANCH_NAME##*/} | tr "[:upper:]" "[:lower:]" | sed "s/[^[:alnum:]]//g"`
          echo $BRANCH_NAME
          echo "BRANCH_NAME_CLEAN=$(echo $BRANCH_NAME)" >> $GITHUB_ENV
          export POD=`kubectl get pods -o name --no-headers=true | grep "drupal-nextjs-${{ env.BRANCH_NAME_CLEAN }}" | head -1 | cut -c 5-`
          echo $POD
          echo "DEST_POD=$POD" >> $GITHUB_ENV

      - uses: quantcdn/cloud-init-action@v1.0.0
        env:
          SECTION_K8S_API_URL: "${{ secrets.SECTION_K8S_API_URL }}"
          SECTION_API_TOKEN: "${{ secrets.SECTION_API_TOKEN }}"

      - name: Prepare backup location
        run: |
          echo "dir=backups" >> $GITHUB_OUTPUT
          echo "file=backup-$(date +'%Y-%m-%d').sql" >> $GITHUB_OUTPUT
        id: backup  # this is used on variable path

      - name: Run the database backup
        env:
          KUBECONFIG: # Unset
          FILENAME: ${{ steps.backup.outputs.file }}
          DIR: ${{ steps.backup.outputs.dir }}
        run: |
          mkdir -p $DIR
          kubectl exec deploy/drupal-nextjs-${{ env.SOURCE_BRANCH_NAME_CLEAN }} --container=drupal-${{ env.SOURCE_BRANCH_NAME_CLEAN }} -- drush sql:dump > $DIR/$FILENAME

      - name: Copy the database backup into place
        env:
          KUBECONFIG: # Unset
          FILENAME: ${{ steps.backup.outputs.file }}
          DIR: ${{ steps.backup.outputs.dir }}
        run: |
          kubectl cp $DIR/$FILENAME ${{ env.DEST_POD }}:/tmp/db-import.sql --container=drupal-${{ env.BRANCH_NAME_CLEAN }}

      - name: Run the database import
        env:
          KUBECONFIG: # Unset
          FILENAME: ${{ steps.backup.outputs.file }}
          DIR: ${{ steps.backup.outputs.dir }}
        run: |
          kubectl exec ${{ env.DEST_POD }} --container=drupal-${{ env.BRANCH_NAME_CLEAN }} -- drush sql:create -y
          kubectl exec ${{ env.DEST_POD }} --container=drupal-${{ env.BRANCH_NAME_CLEAN }} -- sh -c 'mysql -u$MARIADB_USER -h$MARIADB_HOST -p$MARIADB_PASSWORD $MARIADB_DATABASE < /tmp/db-import.sql'
          kubectl exec ${{ env.DEST_POD }} --container=drupal-${{ env.BRANCH_NAME_CLEAN }} -- sh -c 'rm /tmp/db-import.sql'

